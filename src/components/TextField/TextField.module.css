/* Базовый контейнер для TextField */
.textFieldRoot {
  display: inline-flex;
  flex-direction: column;
  position: relative;
  min-width: 0;
  padding: 0;
  margin: 0;
  border: 0;
  vertical-align: top;
}

/* Полная ширина */
.fullWidth {
  width: 100%;
}

/* === ЛЕЙБЛ === */
.label {
  color: rgba(0, 0, 0, 0.6);
  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
  font-weight: 400;
  line-height: 1.4375em;
  letter-spacing: 0.00938em;
  padding: 0;
  display: block;
  transform-origin: top left;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: calc(133% - 32px);
  position: absolute;
  left: 0;
  top: 0;
  transform: translate(14px, 4px) scale(1);
  transition:
    color 200ms cubic-bezier(0, 0, 0.2, 1) 0ms,
    transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms,
    max-width 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  z-index: 1;
  pointer-events: none;
}

.labelSmall {
  transform: translate(14px, 0px) scale(1);
}

/* Лейбл в состоянии фокуса или заполненности */
.labelShrunk {
  transform: translate(14px, -9px) scale(0.75);
  transform-origin: top left;
  max-width: calc(133% - 32px);
}

/* Для outlined варианта корректируем позицию shrunk лейбла */
.outlined .labelShrunk {
  transform: translate(14px, -6px) scale(0.75);
  background-color: white;
  padding: 0 4px;
  margin-left: -4px;
}

/* Для filled варианта лейбл остается внутри заполненной зоны */
.filled .labelShrunk {
  transform: translate(14px, 4px) scale(0.75);
  background-color: transparent;
}

/* Для standard варианта простое поднятие */
.standard .labelShrunk {
  transform: translate(14px, -6px) scale(0.75);
  background-color: transparent;
}

.labelRequired::after {
  content: '';
}

.asterisk {
  color: #d32f2f;
}

/* Лейбл в состоянии ошибки */
.labelError {
  color: #d32f2f;
}

.labelFocused {
  color: #1976d2;
}

.labelFocused.labelError {
  color: #d32f2f;
}

/* === INPUT КОНТЕЙНЕР === */
.inputContainer {
  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
  font-weight: 400;
  line-height: 1.4375em;
  letter-spacing: 0.00938em;
  color: rgba(0, 0, 0, 0.87);
  box-sizing: border-box;
  position: relative;
  cursor: text;
  display: inline-flex;
  align-items: center;
  width: 100%;
}

/* === INPUT === */
.input {
  font: inherit;
  letter-spacing: inherit;
  color: currentColor;
  padding: 16.5px 14px;
  border: 0;
  box-sizing: border-box;
  background: none;
  height: 1.4375em;
  margin: 0;
  display: block;
  min-width: 0;
  width: 100%;
  animation-name: mui-auto-fill-cancel;
  animation-duration: 10ms;
  transition: border-color 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
}

.input:focus {
  outline: 0;
}

.inputSmall {
  padding: 8.5px 14px;
}

/* === ВАРИАНТ: OUTLINED === */
.outlined {
  position: relative;
  border-radius: 4px;
}

.outlinedNotchedOutline {
  text-align: left;
  position: absolute;
  bottom: 0;
  right: 0;
  top: -5px;
  left: 0;
  margin: 0;
  padding: 0 8px;
  pointer-events: none;
  border-radius: inherit;
  border-style: solid;
  border-width: 1px;
  overflow: hidden;
  min-width: 0%;
  border-color: rgba(0, 0, 0, 0.23);
  transition: border-color 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
}

/* Фокус состояние для outlined */
.outlined:hover .outlinedNotchedOutline {
  border-color: rgba(0, 0, 0, 0.87);
}

.outlinedFocused .outlinedNotchedOutline {
  border-color: #1976d2;
  border-width: 2px;
}

/* Ошибка состояние */
.outlinedError .outlinedNotchedOutline {
  border-color: #d32f2f;
}

.outlinedError:hover .outlinedNotchedOutline {
  border-color: #d32f2f;
}

.outlinedFocused.outlinedError .outlinedNotchedOutline {
  border-color: #d32f2f;
}

/* Disabled состояние */
.outlined:disabled .outlinedNotchedOutline,
.outlinedDisabled .outlinedNotchedOutline {
  border-color: rgba(0, 0, 0, 0.26);
}

/* === ВАРИАНТ: FILLED === */
.filled {
  position: relative;
  background-color: rgba(0, 0, 0, 0.06);
  border-top-left-radius: 4px;
  border-top-right-radius: 4px;
  transition: background-color 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
}

.filled:hover {
  background-color: rgba(0, 0, 0, 0.09);
}

.filled::before {
  border-bottom: 1px solid rgba(0, 0, 0, 0.42);
  left: 0;
  bottom: 0;
  content: '\00a0';
  position: absolute;
  right: 0;
  transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  pointer-events: none;
}

.filled::after {
  border-bottom: 2px solid #1976d2;
  left: 0;
  bottom: 0;
  content: '';
  position: absolute;
  right: 0;
  transform: scaleX(0);
  transition: transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  pointer-events: none;
}

.filledFocused::after {
  transform: scaleX(1);
}

.filledError::before,
.filledError::after {
  border-bottom-color: #d32f2f;
}

/* === ВАРИАНТ: STANDARD === */
.standard {
  position: relative;
}

.standard::before {
  border-bottom: 1px solid rgba(0, 0, 0, 0.42);
  left: 0;
  bottom: 0;
  content: '\00a0';
  position: absolute;
  right: 0;
  transition: border-bottom-color 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;
  pointer-events: none;
}

.standard::after {
  border-bottom: 2px solid #1976d2;
  left: 0;
  bottom: 0;
  content: '';
  position: absolute;
  right: 0;
  transform: scaleX(0);
  transition: transform 200ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  pointer-events: none;
}

.standardFocused::after {
  transform: scaleX(1);
}

.standardError::before,
.standardError::after {
  border-bottom-color: #d32f2f;
}

/* === HELPER TEXT === */
.helperText {
  color: rgba(0, 0, 0, 0.6);
  font-family: 'Roboto', 'Helvetica', 'Arial', sans-serif;
  font-weight: 400;
  font-size: 0.75rem;
  line-height: 1.66;
  letter-spacing: 0.03333em;
  text-align: left;
  margin-top: 3px;
  margin-right: 0;
  margin-bottom: 0;
  margin-left: 0;
}

.helperTextError {
  color: #d32f2f;
}

/* === АНИМАЦИЯ АВТОЗАПОЛНЕНИЯ === */
@keyframes mui-auto-fill-cancel {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 1;
  }
}

/* === LEGEND ДЛЯ OUTLINED === */
.legend {
  float: unset;
  width: auto;
  overflow: hidden;
  display: block;
  padding: 0;
  height: 11px;
  font-size: 0.75em;
  visibility: hidden;
  max-width: 0.01px;
  transition: max-width 50ms cubic-bezier(0, 0, 0.2, 1) 0ms;
  white-space: nowrap;
  color: transparent;
}

.legend .legendText {
  padding-left: 5px;
  padding-right: 5px;
  display: inline-block;
  color: transparent;
  visibility: visible;
}

/* Для focused/filled состояния legend создает "вырезку" правильного размера */
.legend {
  max-width: 1000px;
  transition: max-width 100ms cubic-bezier(0, 0, 0.2, 1) 50ms;
}
